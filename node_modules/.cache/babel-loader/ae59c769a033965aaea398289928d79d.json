{"ast":null,"code":"var _jsxFileName = \"/Users/tatyanavinnik/Documents/typescript/my-app/src/components/TodoList.tsx\";\nimport React from \"react\";\nexport const TodoList = ({\n  todos,\n  onRemove,\n  onToggle\n}) => {\n  if (todos.length === 0) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }\n    }, \"No Todos yet\");\n  }\n\n  const removeHandler = (e, id) => {\n    e.preventDefault();\n    onRemove(id);\n  };\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, todos.map(todo => {\n    const classes = [\"todo\"];\n\n    if (todo.completed) {\n      classes.push(\".completed\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.join(\" \"),\n      key: todo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: onToggle.bind(null, todo.id),\n      type: \"checkbox\",\n      checked: todo.completed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, todo.title), /*#__PURE__*/React.createElement(\"i\", {\n      onClick: e => removeHandler(e, todo.id),\n      className: \"material-icons red-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, \"delete\")));\n  }));\n};","map":{"version":3,"sources":["/Users/tatyanavinnik/Documents/typescript/my-app/src/components/TodoList.tsx"],"names":["React","TodoList","todos","onRemove","onToggle","length","removeHandler","e","id","preventDefault","map","todo","classes","completed","push","join","bind","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AASA,OAAO,MAAMC,QAAiC,GAAG,CAAC;AAChDC,EAAAA,KADgD;AAEhDC,EAAAA,QAFgD;AAGhDC,EAAAA;AAHgD,CAAD,KAI3C;AACJ,MAAIF,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;AACtB,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,QAAMC,aAAa,GAAG,CAACC,CAAD,EAAsBC,EAAtB,KAAqC;AACzDD,IAAAA,CAAC,CAACE,cAAF;AAEAN,IAAAA,QAAQ,CAACK,EAAD,CAAR;AACD,GAJD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACQ,GAAN,CAAUC,IAAI,IAAI;AACjB,UAAMC,OAAO,GAAG,CAAC,MAAD,CAAhB;;AACA,QAAID,IAAI,CAACE,SAAT,EAAoB;AAClBD,MAAAA,OAAO,CAACE,IAAR,CAAa,YAAb;AACD;;AAED,wBACE;AAAI,MAAA,SAAS,EAAEF,OAAO,CAACG,IAAR,CAAa,GAAb,CAAf;AAAkC,MAAA,GAAG,EAAEJ,IAAI,CAACH,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,QAAQ,EAAEJ,QAAQ,CAACY,IAAT,CAAc,IAAd,EAAoBL,IAAI,CAACH,EAAzB,CADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,OAAO,EAAEG,IAAI,CAACE,SAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,IAAI,CAACM,KAAZ,CANF,eAOE;AACE,MAAA,OAAO,EAAEV,CAAC,IAAID,aAAa,CAACC,CAAD,EAAII,IAAI,CAACH,EAAT,CAD7B;AAEE,MAAA,SAAS,EAAC,yBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF,CADF;AAkBD,GAxBA,CADH,CADF;AA6BD,CA3CM","sourcesContent":["import React from \"react\";\nimport { ITodo } from \"../interfaces\";\n\ntype TodoListProps = {\n  todos: ITodo[];\n  onToggle: (id: number) => void;\n  onRemove: (id: number) => void;\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  onRemove,\n  onToggle\n}) => {\n  if (todos.length === 0) {\n    return <p className=\"center\">No Todos yet</p>;\n  }\n\n  const removeHandler = (e: React.MouseEvent, id: number) => {\n    e.preventDefault();\n\n    onRemove(id);\n  };\n  return (\n    <ul>\n      {todos.map(todo => {\n        const classes = [\"todo\"];\n        if (todo.completed) {\n          classes.push(\".completed\");\n        }\n\n        return (\n          <li className={classes.join(\" \")} key={todo.id}>\n            <label>\n              <input\n                onChange={onToggle.bind(null, todo.id)}\n                type=\"checkbox\"\n                checked={todo.completed}\n              />\n              <span>{todo.title}</span>\n              <i\n                onClick={e => removeHandler(e, todo.id)}\n                className=\"material-icons red-text\"\n              >\n                delete\n              </i>\n            </label>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}